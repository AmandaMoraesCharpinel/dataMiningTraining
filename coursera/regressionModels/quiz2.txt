# prob timated expected change in mpg per 1,000 lb increase in weight.
##Consider the following data with x as the predictor and y as as the
outcome.

x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
Give a P-value for the two sided hypothesis test of whether β1 from a
linear regression model is 0 or not.

x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
> n<-length(y)
> beta1 <- cor(y, x) * sd(y) / sd(x)
> beta0 <- mean(y) - beta1 * mean(x)
> e <- y - beta0 - beta1 * x
> sigma <- sqrt(sum(e^2) / (n-2)) 
> ssx <- sum((x - mean(x))^2)
> seBeta0 <- (1 / n + mean(x) ^ 2 / ssx) ^ .5 * sigma 
> seBeta1 <- sigma / sqrt(ssx)
> tBeta0 <- beta0 / seBeta0; tBeta1 <- beta1 / seBeta1
> pBeta0 <- 2 * pt(abs(tBeta0), df = n - 2, lower.tail = FALSE)
> pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE)
> coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1,
> seBeta1, tBeta1, pBeta1))
> colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t|)")
> rownames(coefTable) <- c("(Intercept)", "x")
> coefTable
0.0529


#prob2
##Consider the previous problem, give the estimate of the residual
standard deviation.

x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit<-lm(y~x)
sqrt( (sum( (y-predict(fit) )^2 )) / (length(x)-2) )
0.223

# prob 3
## In the mtcars data set, fit a linear regression model of weight
In the mtcars data set, fit a linear regression model of weight (predictor) on mpg (outcome). Get a 95% confidence interval for the
expected mpg at the average weight. What is the lower endpoint?

fit <- lm(mpg~wt,mtcars)
newData<-data.frame(wt =sum(mtcars$wt)/length(mtcars$wt))
predict(fit,newData)
predict(fit,newData,interval="confidence")
       fit      lwr      upr
	   1 20.09062 18.99098 21.19027
# prob 4
##Refer to the previous question. Read the help file for mtcars. What is
the weight coefficient interpreted as?
-->The estimated expected change in mpg per 1,000 lb increase in weight.

# prob 5
## Consider again the mtcars data set and a linear regression model with
mpg as predicted by weight (1,000 lbs). A new car is coming weighing
3000 pounds. Construct a 95% prediction interval for its mpg. What is
the upper endpoint?

fit<-lm(mpg~wt,mtcars)
newData<-data.frame(wt=3)
predict(fit,newData,interval="prediction")
       fit      lwr      upr
	   1 21.25171 14.92987 27.57355

# prob 6
## Consider again the mtcars data set and a linear regression model with
mpg as predicted by weight (in 1,000 lbs). A “short” ton is defined as
2,000 lbs. Construct a 95% confidence interval for the expected change
in mpg per 1 short ton increase in weight. Give the lower endpoint.

fit2<-lm(y~I(x/2))
tbl2<-summary(fit2)$coefficients
mn<-tbl2[2,1]      #mean is the estimated slope
std_err<-tbl2[2,2] #standard error
deg_fr<-fit2$df    #degree of freedom
#Two sides T-Tests
mn + c(-1,1) * qt(0.975,df=deg_fr) * std_err

# prob 7
##If my X from a linear regression is measured in centimeters and I
convert it to meters what would happen to the slope coefficient?

-->it would get multiplied by 100


# prob 8
##I have an outcome, Y, and a predictor, X and fit a linear regression
model with Y=β0+β1X+ϵ to obtain β^0 and β^1. What would be the
consequence to the subsequent slope and intercept if I were to refit the
model with a new regressor, X+c for some constant, c?
-->The new intercept would be β^0−cβ^1

# prob 9
##Refer back to the mtcars data set with mpg as an outcome and weight
Refer back to the mtcars data set with mpg as an outcome and weight (wt) as the predictor. 
About what is the ratio of the the sum of the
squared errors, ∑ni=1(Yi−Y^i)2 when comparing a model with just an
intercept (denominator) to the model with the intercept and slope
(numerator)?

x<-mtcars$wt
y<-mtcars$mpg
sum( (y- lm(y~x)$fitted)^2) / sum( (y- lm(y~1)$fitted)^2) 
[1] 0.2471672


# prasdaob 10
##Do the residuals always have to sum to 0 in linear regression?
--> if an intercept is included they sum uo to 0
